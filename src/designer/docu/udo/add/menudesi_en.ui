##############################################################
!node Designer's menu-bar

As with all GEM menus, clicking on the heading drops down the menu 
and its entries can be selected either by clicking on them or using 
the keyboard shortcuts displayed at the end of the line.

The customary abbreviations are used:
!begin_verbatim
 '^' = <Control>
 '' = <Alternate>
 '' = <Shift>
!end_verbatim

A full list can be viewed in Designer's keyboard shortcuts.

In the dialogs, the elements can be selected by clicking on them, or 
by pressing <Alternate> together with the underlined letter.

(!I)Warning:(!i) Due to differences between German and English-language 
keyboards, in a few cases where <Alternate><Y> is indicated you have 
to press <Alternate><Z> instead. Keyboards of other nationalities may 
also have some <Alternate>-letter combinations transposed.


##############################################################
!subnode DESIGNER menu


##############################################################

!subsubnode About Designer

This brings up a dialog-box showing the authors who created and 
translated the program. Clicking on the Info... box provides some 
further information about its development.

(!B)The purpose of Designer(!b)

The Designer in the database system PHOENIX has the following tasks:

!begin_itemize !short
	!item Creation of new databases
	!item Modification of existing databases
	!item Backup functions for the entire database structure (Export, Import)
	!item Printing the database structure for documentation purposes (only with NVDI!)
	!item Creation of any number of masks for a database
	!item Assignment of user and access rights
	!item Creation of a text description and C-interface of the database structure
!end_itemize

Further information:

About Phoenix (!nl)
About Manager (!nl)

##############################################################
!subnode File menu

##############################################################
!subsubnode Create new

This creates a new (!link [database window][Database windows]) labelled 'Unnamed'.
If such a 
window exists already, then an error-message will appear. Only one 
database window with a given name may be open at any time, else on 
saving a window all databases with the same name and access path 
would be overwritten. The name consists of the access path and a 
database name which may be up to 8 characters in length.

##############################################################
!subsubnode Open

This command is context-dependent and has two meanings:
!begin_itemize
	!item If any object (e.g. a table in the (!link [database window][Database windows]))
	 is selected then an attempt will be made to open the object. This corresponds 
     to a double-click on the object.

	!item If no object (on the desktop or in a window) is selected then a 
     fileselector-box appears to permit you to open a database. After 
     a database is selected, the
     (!link [Open database dialog-box][Open database dialog-box]) appears.

!end_itemize

##############################################################
!subsubnode Close

Close always closes the topped window. This can be a database, a mask 
or a dialog-box. If there is a risk of losing data, the user will be  
warned of this by a safety query.

(!I)Note:(!i) (!nl)
The command 'Close' is only selectable if something is capable of 
being closed.


##############################################################
!subsubnode Save

This command can be selected only if a database or a mask has been  
modified. Its purpose is to save the altered database or mask.

If the 'Save automatically' switch in the
(!link [Configuration dialog-box][Configuration dialog-box]) is 
active, then on saving a database window the database structure will 
be exported automatically (with suffix .DBS = (!B)d(!b)ata(!B)b(!b)ase (!B)s(!b)tructure).


##############################################################
!subsubnode Save as

With this command a newly created database can be saved under a name 
different from 'Unnamed'. If you want to save an existing database 
under a different name, you can only do this by copying the files 
with suffix .DAT and suffix .IND, say in the GEM desktop, and change 
the filenames during copying (many desktops also allow files to be  
renamed with the 'Show info' function).

(!I)Warning:(!i) (!nl)
A previously saved database can only be re-saved using the Save 
command.

##############################################################
!subsubnode Abort

Abort terminates the editing of the current database (not of the 
mask). If any changes were made, an alert-box appears with safety 
queries so that saving of the changes is not omitted acidentally.
Subsequently the last version saved of the database whose editing 
is to be terminated will be re-loaded.

##############################################################
!subsubnode Save DBS

This command permits saving of the database structure (tables, 
fields, masks, queries, reports, calculations etc). This can be 
used for backing up the database structure, for instance.

The files always take the suffix .DBS ((!B)d(!b)ata(!B)b(!b)ase (!B)s(!b)tructure). The 
backup of the structure will take place automatically when saving 
a databank if the 'Generate DBS automatically' switch in the 
(!link [Configuration dialog-box][Configuration dialog-box]) is turned on.

(!I)Warning:(!i) (!nl)
A database structure can be created only if the database was saved
beforehand and no further changes were made since then!

##############################################################
!subsubnode Load DBS

A saved structure can be re-loaded at any time. After choosing the 
relevant structure file (*.DBS) with the fileselector, a new file-
selector appears that asks for the filename of the database (*.DAT);
a new database will then be created under this name.

(!I)Tip:(!i) (!nl)
If you want to delete all data-sets of an existing database, then 
you do not have to use the wastebin of the Manager. It is much 
faster to load the database into Designer and perform a structure 
save ((!link [Save DBS][Save DBS])) followed by a structure load. After saving the 
structure you should close the database window. If you re-create 
the database under the same name, all the user data of the old 
database will be deleted; tables, queries, reports, calculations 
etc. will be retained, however.

So to perform a compact backup of your database, export all the 
tables in Manager and save a database structure in Designer. With 
the aid of the files created in this way you can re-constitute 
your old database at any time.

##############################################################
!subsubnode Export ASCII

This command enables the saving of the database structure (tables, 
fields, queries, reports, calculations etc.) in ASCII format. This 
allows conversion of the database from the ATARI GEM version to the 
INTEL Windows version. The files have the suffix .DBA 
(!B)d(!b)ata(!B)b(!b)ase structure (!B)A(!b)SCII).

(!I)Warning:(!i) (!nl)
A database structure can be created only if the database was saved
beforehand and no further changes were made since then!

"(!nolink [Masks])" can not be exported since the structures of the GEM and Windows 
versions are incompatible.

##############################################################
!subsubnode Print

Depending on the switch setting of 'Print output to Metafile' in 
the (!link [Configuration dialog-box][Configuration dialog-box]), this command
outputs a database either 
to a metafile (.GEM) in the same directory as the relevant .DAT file 
when the checkbox is crossed, else in graphic mode to the printer.

(!I)Warning:(!i)  (!nl)
Print only works with NVDI installed!

##############################################################
!subsubnode Quit

With this entry you terminate the session; for safety's sake, if 
any changes were made to the databases or masks you will get a 
relevant message. After this Designer will be exited.

##############################################################
!subnode Edit menu

##############################################################
!subsubnode Undo

Reverses the last action. This command has no meaning in Designer.

##############################################################
!subsubnode Cut

If the user selects one or more objects (fields or mask objects), 
then the command 'Cut' deletes the object and stores it in the 
(!link [clipboard][The clipboard]).

The old clipboard contents will be lost with this action.

##############################################################
!subsubnode Copy

With this command one or more selected objects (fields or mask 
objects) will be copied to the (!link [clipboard][The clipboard]), without the objects 
being deleted. The old clipboard contents will be lost with this 
action.

##############################################################
!subsubnode Paste

Paste inserts the object stored on the (!link [clipboard][The clipboard]) into the window. 
However, this depends on what type of object is in the clipboard;
for instance fields cut or copied from a (!link [database window][Database windows])
can only 
be copied to table-objects in a database window. 

A cut/copied mask object (e.g. a text or a rectangle) can only be 
copied to other (!link [mask windows][Mask windows]) and not a database window.

##############################################################
!subsubnode Delete

This command deletes a selected object. It will not be copied to the 
(!link [clipboard][The clipboard]). The existing clipboard contents will remain!

##############################################################
!subsubnode Select all

With this command all objects of the current window
((!link [database window][Database windows]) 
or (!link [mask window][Mask windows])) will be selected. If no window is
open, then the 
objects of the (!link [desktop][The Designer's desktop]) will be selected.

##############################################################
!subsubnode Cycle windows

This command allows the user to switch between the opened windows. 

(!I)Tip:(!i) (!nl)
Alternatively, <Alternate>-<Esc>, <Control>-<Esc> or <Control-W> 
key presses are allowed and produce the same result!

##############################################################
!subsubnode To GEM clipboard

If this entry is switched on (denoted by a hooklet before the menu 
entry) then Cut, Copy, Paste operations are stored externally in the 
directory CLIPBRD, which normally lies on hard drive partition C:.

With this it is possible to exchange data with other programs that 
support the GEM (!link [clipboard][The clipboard]).

If it is switched off, Cut, Copy, Paste is performed via an internal 
buffer, which is appreciably faster. However data exchange with other 
programs is not possible in that case. Note that this is is not yet 
supported in this version.

##############################################################
!subnode Options menu

##############################################################
!subsubnode Configuration

If you want to make changes to the configuration, select this command. 
The (!link [Configuration dialog-box][Configuration dialog-box]) appears.

##############################################################
!subsubnode Parameters

With this command you can set some parameters for (!link [database][Database windows])
and (!link [mask windows][Mask windows]). The
(!link [Parameters dialog-box][Parameters dialog-box]) appears.

##############################################################
!subsubnode Load configuration

On activating this command a fileselector appears in which you can 
select and load the desired configuration file, recognisable by the 
suffix .INF. All settings (configuration and parameters) as well as 
the icons on the desktop and the database windows will then be 
displayed in the same way as when they were saved.

##############################################################
!subsubnode Save configuration

With this entry the current configuration settings as well as the 
parameters, the user desktop and the database windows can be saved 
to a file with the suffix .INF.

##############################################################
!subsubnode User desktop

This command opens the
(!link [User interface dialog-box][User interface dialog-box]), which can be 
used to configure various aspects of the user interface.

##############################################################
!subnode Help menu

(!I)Note(!i) (!nl)
In the current version, the help system only works if ST-Guide is 
installed on the system (see (!link [Using Help][Using Help])).

##############################################################
!subsubnode Context help

With this command you can open a Help window which describes what you 
can do in the current situation and explains the options available.

##############################################################
!subsubnode Index (of Help entries)

With this command you can open a Help window which displays an 
alphabetically ordered list of available Help entries in ST-Guide.

##############################################################
!subsubnode Contents (of Help entries)

With this command you can open a Help window which displays a 
thematically ordered list of Help pages in ST-Guide.

##############################################################
!subsubnode Info

This command opens a dialog-box with context-dependent information, 
say for the topped open window or for the selected object.
